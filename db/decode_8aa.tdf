--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=19 LPM_WIDTH=5 data eq
--VERSION_BEGIN 17.1 cbx_cycloneii 2017:10:25:18:06:53:SJ cbx_lpm_add_sub 2017:10:25:18:06:53:SJ cbx_lpm_compare 2017:10:25:18:06:53:SJ cbx_lpm_decode 2017:10:25:18:06:53:SJ cbx_mgl 2017:10:25:18:08:29:SJ cbx_nadder 2017:10:25:18:06:53:SJ cbx_stratix 2017:10:25:18:06:53:SJ cbx_stratixii 2017:10:25:18:06:53:SJ  VERSION_END


-- Copyright (C) 2017  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_8aa
( 
	data[4..0]	:	input;
	eq[18..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[18..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode1009w[3..0]	: WIRE;
	w_anode1019w[3..0]	: WIRE;
	w_anode1029w[3..0]	: WIRE;
	w_anode1039w[3..0]	: WIRE;
	w_anode1049w[3..0]	: WIRE;
	w_anode1061w[2..0]	: WIRE;
	w_anode1071w[3..0]	: WIRE;
	w_anode1082w[3..0]	: WIRE;
	w_anode1092w[3..0]	: WIRE;
	w_anode1102w[3..0]	: WIRE;
	w_anode1112w[3..0]	: WIRE;
	w_anode1122w[3..0]	: WIRE;
	w_anode1132w[3..0]	: WIRE;
	w_anode1142w[3..0]	: WIRE;
	w_anode1153w[2..0]	: WIRE;
	w_anode1163w[3..0]	: WIRE;
	w_anode1174w[3..0]	: WIRE;
	w_anode1184w[3..0]	: WIRE;
	w_anode1194w[3..0]	: WIRE;
	w_anode1204w[3..0]	: WIRE;
	w_anode1214w[3..0]	: WIRE;
	w_anode1224w[3..0]	: WIRE;
	w_anode1234w[3..0]	: WIRE;
	w_anode1245w[2..0]	: WIRE;
	w_anode1255w[3..0]	: WIRE;
	w_anode1266w[3..0]	: WIRE;
	w_anode1276w[3..0]	: WIRE;
	w_anode1286w[3..0]	: WIRE;
	w_anode1296w[3..0]	: WIRE;
	w_anode1306w[3..0]	: WIRE;
	w_anode1316w[3..0]	: WIRE;
	w_anode1326w[3..0]	: WIRE;
	w_anode958w[2..0]	: WIRE;
	w_anode972w[3..0]	: WIRE;
	w_anode989w[3..0]	: WIRE;
	w_anode999w[3..0]	: WIRE;
	w_data956w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[18..0] = eq_wire[18..0];
	eq_wire[] = ( ( w_anode1326w[3..3], w_anode1316w[3..3], w_anode1306w[3..3], w_anode1296w[3..3], w_anode1286w[3..3], w_anode1276w[3..3], w_anode1266w[3..3], w_anode1255w[3..3]), ( w_anode1234w[3..3], w_anode1224w[3..3], w_anode1214w[3..3], w_anode1204w[3..3], w_anode1194w[3..3], w_anode1184w[3..3], w_anode1174w[3..3], w_anode1163w[3..3]), ( w_anode1142w[3..3], w_anode1132w[3..3], w_anode1122w[3..3], w_anode1112w[3..3], w_anode1102w[3..3], w_anode1092w[3..3], w_anode1082w[3..3], w_anode1071w[3..3]), ( w_anode1049w[3..3], w_anode1039w[3..3], w_anode1029w[3..3], w_anode1019w[3..3], w_anode1009w[3..3], w_anode999w[3..3], w_anode989w[3..3], w_anode972w[3..3]));
	w_anode1009w[] = ( (w_anode1009w[2..2] & (! w_data956w[2..2])), (w_anode1009w[1..1] & w_data956w[1..1]), (w_anode1009w[0..0] & w_data956w[0..0]), w_anode958w[2..2]);
	w_anode1019w[] = ( (w_anode1019w[2..2] & w_data956w[2..2]), (w_anode1019w[1..1] & (! w_data956w[1..1])), (w_anode1019w[0..0] & (! w_data956w[0..0])), w_anode958w[2..2]);
	w_anode1029w[] = ( (w_anode1029w[2..2] & w_data956w[2..2]), (w_anode1029w[1..1] & (! w_data956w[1..1])), (w_anode1029w[0..0] & w_data956w[0..0]), w_anode958w[2..2]);
	w_anode1039w[] = ( (w_anode1039w[2..2] & w_data956w[2..2]), (w_anode1039w[1..1] & w_data956w[1..1]), (w_anode1039w[0..0] & (! w_data956w[0..0])), w_anode958w[2..2]);
	w_anode1049w[] = ( (w_anode1049w[2..2] & w_data956w[2..2]), (w_anode1049w[1..1] & w_data956w[1..1]), (w_anode1049w[0..0] & w_data956w[0..0]), w_anode958w[2..2]);
	w_anode1061w[] = ( (w_anode1061w[1..1] & (! data_wire[4..4])), (w_anode1061w[0..0] & data_wire[3..3]), B"1");
	w_anode1071w[] = ( (w_anode1071w[2..2] & (! w_data956w[2..2])), (w_anode1071w[1..1] & (! w_data956w[1..1])), (w_anode1071w[0..0] & (! w_data956w[0..0])), w_anode1061w[2..2]);
	w_anode1082w[] = ( (w_anode1082w[2..2] & (! w_data956w[2..2])), (w_anode1082w[1..1] & (! w_data956w[1..1])), (w_anode1082w[0..0] & w_data956w[0..0]), w_anode1061w[2..2]);
	w_anode1092w[] = ( (w_anode1092w[2..2] & (! w_data956w[2..2])), (w_anode1092w[1..1] & w_data956w[1..1]), (w_anode1092w[0..0] & (! w_data956w[0..0])), w_anode1061w[2..2]);
	w_anode1102w[] = ( (w_anode1102w[2..2] & (! w_data956w[2..2])), (w_anode1102w[1..1] & w_data956w[1..1]), (w_anode1102w[0..0] & w_data956w[0..0]), w_anode1061w[2..2]);
	w_anode1112w[] = ( (w_anode1112w[2..2] & w_data956w[2..2]), (w_anode1112w[1..1] & (! w_data956w[1..1])), (w_anode1112w[0..0] & (! w_data956w[0..0])), w_anode1061w[2..2]);
	w_anode1122w[] = ( (w_anode1122w[2..2] & w_data956w[2..2]), (w_anode1122w[1..1] & (! w_data956w[1..1])), (w_anode1122w[0..0] & w_data956w[0..0]), w_anode1061w[2..2]);
	w_anode1132w[] = ( (w_anode1132w[2..2] & w_data956w[2..2]), (w_anode1132w[1..1] & w_data956w[1..1]), (w_anode1132w[0..0] & (! w_data956w[0..0])), w_anode1061w[2..2]);
	w_anode1142w[] = ( (w_anode1142w[2..2] & w_data956w[2..2]), (w_anode1142w[1..1] & w_data956w[1..1]), (w_anode1142w[0..0] & w_data956w[0..0]), w_anode1061w[2..2]);
	w_anode1153w[] = ( (w_anode1153w[1..1] & data_wire[4..4]), (w_anode1153w[0..0] & (! data_wire[3..3])), B"1");
	w_anode1163w[] = ( (w_anode1163w[2..2] & (! w_data956w[2..2])), (w_anode1163w[1..1] & (! w_data956w[1..1])), (w_anode1163w[0..0] & (! w_data956w[0..0])), w_anode1153w[2..2]);
	w_anode1174w[] = ( (w_anode1174w[2..2] & (! w_data956w[2..2])), (w_anode1174w[1..1] & (! w_data956w[1..1])), (w_anode1174w[0..0] & w_data956w[0..0]), w_anode1153w[2..2]);
	w_anode1184w[] = ( (w_anode1184w[2..2] & (! w_data956w[2..2])), (w_anode1184w[1..1] & w_data956w[1..1]), (w_anode1184w[0..0] & (! w_data956w[0..0])), w_anode1153w[2..2]);
	w_anode1194w[] = ( (w_anode1194w[2..2] & (! w_data956w[2..2])), (w_anode1194w[1..1] & w_data956w[1..1]), (w_anode1194w[0..0] & w_data956w[0..0]), w_anode1153w[2..2]);
	w_anode1204w[] = ( (w_anode1204w[2..2] & w_data956w[2..2]), (w_anode1204w[1..1] & (! w_data956w[1..1])), (w_anode1204w[0..0] & (! w_data956w[0..0])), w_anode1153w[2..2]);
	w_anode1214w[] = ( (w_anode1214w[2..2] & w_data956w[2..2]), (w_anode1214w[1..1] & (! w_data956w[1..1])), (w_anode1214w[0..0] & w_data956w[0..0]), w_anode1153w[2..2]);
	w_anode1224w[] = ( (w_anode1224w[2..2] & w_data956w[2..2]), (w_anode1224w[1..1] & w_data956w[1..1]), (w_anode1224w[0..0] & (! w_data956w[0..0])), w_anode1153w[2..2]);
	w_anode1234w[] = ( (w_anode1234w[2..2] & w_data956w[2..2]), (w_anode1234w[1..1] & w_data956w[1..1]), (w_anode1234w[0..0] & w_data956w[0..0]), w_anode1153w[2..2]);
	w_anode1245w[] = ( (w_anode1245w[1..1] & data_wire[4..4]), (w_anode1245w[0..0] & data_wire[3..3]), B"1");
	w_anode1255w[] = ( (w_anode1255w[2..2] & (! w_data956w[2..2])), (w_anode1255w[1..1] & (! w_data956w[1..1])), (w_anode1255w[0..0] & (! w_data956w[0..0])), w_anode1245w[2..2]);
	w_anode1266w[] = ( (w_anode1266w[2..2] & (! w_data956w[2..2])), (w_anode1266w[1..1] & (! w_data956w[1..1])), (w_anode1266w[0..0] & w_data956w[0..0]), w_anode1245w[2..2]);
	w_anode1276w[] = ( (w_anode1276w[2..2] & (! w_data956w[2..2])), (w_anode1276w[1..1] & w_data956w[1..1]), (w_anode1276w[0..0] & (! w_data956w[0..0])), w_anode1245w[2..2]);
	w_anode1286w[] = ( (w_anode1286w[2..2] & (! w_data956w[2..2])), (w_anode1286w[1..1] & w_data956w[1..1]), (w_anode1286w[0..0] & w_data956w[0..0]), w_anode1245w[2..2]);
	w_anode1296w[] = ( (w_anode1296w[2..2] & w_data956w[2..2]), (w_anode1296w[1..1] & (! w_data956w[1..1])), (w_anode1296w[0..0] & (! w_data956w[0..0])), w_anode1245w[2..2]);
	w_anode1306w[] = ( (w_anode1306w[2..2] & w_data956w[2..2]), (w_anode1306w[1..1] & (! w_data956w[1..1])), (w_anode1306w[0..0] & w_data956w[0..0]), w_anode1245w[2..2]);
	w_anode1316w[] = ( (w_anode1316w[2..2] & w_data956w[2..2]), (w_anode1316w[1..1] & w_data956w[1..1]), (w_anode1316w[0..0] & (! w_data956w[0..0])), w_anode1245w[2..2]);
	w_anode1326w[] = ( (w_anode1326w[2..2] & w_data956w[2..2]), (w_anode1326w[1..1] & w_data956w[1..1]), (w_anode1326w[0..0] & w_data956w[0..0]), w_anode1245w[2..2]);
	w_anode958w[] = ( (w_anode958w[1..1] & (! data_wire[4..4])), (w_anode958w[0..0] & (! data_wire[3..3])), B"1");
	w_anode972w[] = ( (w_anode972w[2..2] & (! w_data956w[2..2])), (w_anode972w[1..1] & (! w_data956w[1..1])), (w_anode972w[0..0] & (! w_data956w[0..0])), w_anode958w[2..2]);
	w_anode989w[] = ( (w_anode989w[2..2] & (! w_data956w[2..2])), (w_anode989w[1..1] & (! w_data956w[1..1])), (w_anode989w[0..0] & w_data956w[0..0]), w_anode958w[2..2]);
	w_anode999w[] = ( (w_anode999w[2..2] & (! w_data956w[2..2])), (w_anode999w[1..1] & w_data956w[1..1]), (w_anode999w[0..0] & (! w_data956w[0..0])), w_anode958w[2..2]);
	w_data956w[2..0] = data_wire[2..0];
END;
--VALID FILE
